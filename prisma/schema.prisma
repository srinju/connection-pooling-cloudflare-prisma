// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model log {
  id Int @id  @default(autoincrement())
  level String
  message String
  meta Json
}

//we write our normal prisma shit and then do migration which creates out databse and
//and then we ENABLE ACCELARATE IN THE PRISMA DATA PLATFORM
//we can use prisma ORM to cloudflare workers through Prisma accelarate 
//after we make a new project to the accelarate and provide the connection string to our original databse and then
//they provide us with the conncection pool string we should copy that and replace our databse url with that stirng in our 
//not in the.env file but in the wrangler.toml file type DATABASE_URL and that pool string we just copied
//and we make a direct url in the .env file and also add it to the prisma schema file
//which is fot the direct conncection to the database
//so whenver we are running the migrate command it should connect to the direct url that is directly to the database not the conncection pool 
//note that all the env that we want to use in index.ts should be in the wrangler.toml file and for the CLI shit of the files we can just use the env file for storing our urls
//ALL THESE STEPS ARE ALREADY WTITTEN IN THE DOCS ATTACHED TO THE SERVERLESS TRACK IN 100XDEVS
//then we run the orisma accelarate extension npm install @prisma/extension-accelerate
//and then we do npx prisma generate --no-engine >>>what this means is it is that autogenerated clients where we can perform CRUD operations and this clinet is with no engine only for cloudflare workers
//basically no engine flag means that it dosent generate all the extra files in the node modules for the prisma autogenerated clientws which was used to be added when we added autogenerated clients with engine 
//and then we copy and paste the code that is present in the docs to our index.ts file
//and then wrangler login and deploy it npm run deploy to deploy it

